services:
  app:
    # Build à partir du Dockerfile local
    build:
      context: ./backend # Contexte de build, le répertoire courant
      dockerfile: Dockerfile # Spécifie le Dockerfile à utiliser

    # Monte le port local 3000 vers le port 3000 du conteneur
    ports:
      - '3000:3000'

    # Variables d'environnement nécessaires à l'app (dont DATABASE_URL pour Prisma)
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/lapince
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true

    # Volume local vers conteneur pour rechargement automatique (live reload)
    volumes:
      - ./backend:/app # Code local monté dans le conteneur
      - /app/node_modules # Évite d'écraser les node_modules installés dans le conteneur

    # Attend que la base de données soit prête avant de lancer
    depends_on:
      - db
    command: sh -c "npx prisma migrate reset --force&& npx tsx src/db/seeding.ts && npm run dev"

  db:
    # Image officielle de PostgreSQL légère
    image: postgres:17-alpine

    # Port local 5434 redirigé vers 5432 dans le conteneur
    ports:
      - '5434:5432'

    # Variables d'environnement pour initialiser PostgreSQL
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=lapince

    # Volume persistant pour stocker les données PostgreSQL localement
    volumes:
      - postgres_data:/var/lib/postgresql/data

# Volume Docker nommé pour les données de PostgreSQL
volumes:
  postgres_data:
